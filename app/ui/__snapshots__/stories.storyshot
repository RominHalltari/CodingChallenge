// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Storyshots BirthdayPicker Allow null, initially null 1`] = `
<View>
  <View
    accessible={true}
    clickable={true}
    isTVSelectable={true}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "alignSelf": "center",
        "backgroundColor": "#f2f5f7",
        "borderRadius": 50,
        "height": 50,
        "opacity": 1,
        "paddingHorizontal": 50,
        "width": "100%",
      }
    }
  />
  <Modal
    animationType="none"
    hardwareAccelerated={false}
    hideModalContentWhileAnimating={false}
    onModalHide={[Function]}
    onModalWillHide={[Function]}
    onModalWillShow={[Function]}
    onRequestClose={[Function]}
    scrollHorizontal={false}
    scrollOffset={0}
    scrollOffsetMax={0}
    scrollTo={null}
    supportedOrientations={
      Array [
        "portrait",
        "landscape",
      ]
    }
    swipeThreshold={100}
    transparent={true}
    visible={false}
  >
    <View
      accessible={true}
      clickable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "backgroundColor": "black",
          "bottom": 0,
          "height": 1334,
          "left": 0,
          "opacity": 0,
          "position": "absolute",
          "right": 0,
          "top": 0,
          "width": 750,
        }
      }
    />
    <View
      hideModalContentWhileAnimating={false}
      onModalHide={[Function]}
      onModalWillHide={[Function]}
      onModalWillShow={[Function]}
      pointerEvents="box-none"
      scrollHorizontal={false}
      scrollOffset={0}
      scrollOffsetMax={0}
      scrollTo={null}
      style={
        Object {
          "flex": 1,
          "justifyContent": "flex-end",
          "margin": 10,
          "transform": Array [
            Object {
              "translateY": 0,
            },
          ],
        }
      }
      supportedOrientations={
        Array [
          "portrait",
          "landscape",
        ]
      }
      swipeThreshold={100}
    >
      <View
        style={
          Array [
            Object {
              "borderRadius": 13,
              "marginBottom": 8,
              "overflow": "hidden",
            },
            Object {
              "backgroundColor": "white",
            },
            undefined,
          ]
        }
      >
        <View
          style={
            Object {
              "backgroundColor": "transparent",
              "borderBottomColor": "#d5d5d5",
              "borderBottomWidth": 0.5,
              "padding": 14,
            }
          }
        >
          <Text
            style={
              Array [
                Object {
                  "color": "#8f8f8f",
                  "fontSize": 13,
                  "textAlign": "center",
                },
                undefined,
              ]
            }
          >
            Pick a date
          </Text>
        </View>
        <View
          onStartShouldSetResponderCapture={[Function]}
        />
        <View
          accessible={true}
          clickable={true}
          isTVSelectable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "backgroundColor": "transparent",
              "borderColor": "#d5d5d5",
              "borderTopWidth": 0.5,
              "height": 57,
              "justifyContent": "center",
            }
          }
        >
          <Text
            style={
              Array [
                Object {
                  "backgroundColor": "transparent",
                  "color": "#007ff9",
                  "fontSize": 20,
                  "fontWeight": "normal",
                  "textAlign": "center",
                },
                undefined,
              ]
            }
          >
            Confirm
          </Text>
        </View>
      </View>
      <View
        accessible={true}
        clickable={true}
        isTVSelectable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Array [
            Object {
              "borderRadius": 13,
              "height": 57,
              "justifyContent": "center",
              "marginBottom": 0,
            },
            Object {
              "backgroundColor": "white",
            },
            undefined,
          ]
        }
      >
        <Text
          style={
            Array [
              Object {
                "backgroundColor": "transparent",
                "color": "#007ff9",
                "fontSize": 20,
                "fontWeight": "600",
                "padding": 10,
                "textAlign": "center",
              },
              undefined,
            ]
          }
        >
          Cancel
        </Text>
      </View>
    </View>
  </Modal>
</View>
`;

exports[`Storyshots BirthdayPicker Allow null, initially set 1`] = `
<View>
  <View
    accessible={true}
    clickable={true}
    isTVSelectable={true}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "alignSelf": "center",
        "backgroundColor": "#f2f5f7",
        "borderRadius": 50,
        "height": 50,
        "opacity": 1,
        "paddingHorizontal": 50,
        "width": "100%",
      }
    }
  >
    <View
      style={
        Object {
          "alignItems": "center",
          "height": "100%",
          "justifyContent": "center",
          "width": "100%",
        }
      }
    >
      <Text
        style={
          Object {
            "fontSize": 13,
            "fontWeight": "bold",
          }
        }
      >
        Today
      </Text>
      <Text
        style={
          Object {
            "fontSize": 12,
            "opacity": 0.8,
          }
        }
      >
        23 January 2019
      </Text>
    </View>
    <View
      accessible={true}
      clickable={true}
      isTVSelectable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "backgroundColor": "#ffffff",
          "borderRadius": 20,
          "height": 40,
          "justifyContent": "center",
          "opacity": 1,
          "position": "absolute",
          "right": 5,
          "top": 5,
          "width": 40,
        }
      }
    >
      <Text
        style={
          Object {
            "color": "#4268b0",
          }
        }
      >
        <FontAwesome5Icon
          name="times"
        />
      </Text>
    </View>
  </View>
  <Modal
    animationType="none"
    hardwareAccelerated={false}
    hideModalContentWhileAnimating={false}
    onModalHide={[Function]}
    onModalWillHide={[Function]}
    onModalWillShow={[Function]}
    onRequestClose={[Function]}
    scrollHorizontal={false}
    scrollOffset={0}
    scrollOffsetMax={0}
    scrollTo={null}
    supportedOrientations={
      Array [
        "portrait",
        "landscape",
      ]
    }
    swipeThreshold={100}
    transparent={true}
    visible={false}
  >
    <View
      accessible={true}
      clickable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "backgroundColor": "black",
          "bottom": 0,
          "height": 1334,
          "left": 0,
          "opacity": 0,
          "position": "absolute",
          "right": 0,
          "top": 0,
          "width": 750,
        }
      }
    />
    <View
      hideModalContentWhileAnimating={false}
      onModalHide={[Function]}
      onModalWillHide={[Function]}
      onModalWillShow={[Function]}
      pointerEvents="box-none"
      scrollHorizontal={false}
      scrollOffset={0}
      scrollOffsetMax={0}
      scrollTo={null}
      style={
        Object {
          "flex": 1,
          "justifyContent": "flex-end",
          "margin": 10,
          "transform": Array [
            Object {
              "translateY": 0,
            },
          ],
        }
      }
      supportedOrientations={
        Array [
          "portrait",
          "landscape",
        ]
      }
      swipeThreshold={100}
    >
      <View
        style={
          Array [
            Object {
              "borderRadius": 13,
              "marginBottom": 8,
              "overflow": "hidden",
            },
            Object {
              "backgroundColor": "white",
            },
            undefined,
          ]
        }
      >
        <View
          style={
            Object {
              "backgroundColor": "transparent",
              "borderBottomColor": "#d5d5d5",
              "borderBottomWidth": 0.5,
              "padding": 14,
            }
          }
        >
          <Text
            style={
              Array [
                Object {
                  "color": "#8f8f8f",
                  "fontSize": 13,
                  "textAlign": "center",
                },
                undefined,
              ]
            }
          >
            Pick a date
          </Text>
        </View>
        <View
          onStartShouldSetResponderCapture={[Function]}
        />
        <View
          accessible={true}
          clickable={true}
          isTVSelectable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "backgroundColor": "transparent",
              "borderColor": "#d5d5d5",
              "borderTopWidth": 0.5,
              "height": 57,
              "justifyContent": "center",
            }
          }
        >
          <Text
            style={
              Array [
                Object {
                  "backgroundColor": "transparent",
                  "color": "#007ff9",
                  "fontSize": 20,
                  "fontWeight": "normal",
                  "textAlign": "center",
                },
                undefined,
              ]
            }
          >
            Confirm
          </Text>
        </View>
      </View>
      <View
        accessible={true}
        clickable={true}
        isTVSelectable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Array [
            Object {
              "borderRadius": 13,
              "height": 57,
              "justifyContent": "center",
              "marginBottom": 0,
            },
            Object {
              "backgroundColor": "white",
            },
            undefined,
          ]
        }
      >
        <Text
          style={
            Array [
              Object {
                "backgroundColor": "transparent",
                "color": "#007ff9",
                "fontSize": 20,
                "fontWeight": "600",
                "padding": 10,
                "textAlign": "center",
              },
              undefined,
            ]
          }
        >
          Cancel
        </Text>
      </View>
    </View>
  </Modal>
</View>
`;

exports[`Storyshots BirthdayPicker Disallow null, initially set 1`] = `
<View>
  <View
    accessible={true}
    clickable={true}
    isTVSelectable={true}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "alignSelf": "center",
        "backgroundColor": "#f2f5f7",
        "borderRadius": 50,
        "height": 50,
        "opacity": 1,
        "paddingHorizontal": 50,
        "width": "100%",
      }
    }
  >
    <View
      style={
        Object {
          "alignItems": "center",
          "height": "100%",
          "justifyContent": "center",
          "width": "100%",
        }
      }
    >
      <Text
        style={
          Object {
            "fontSize": 13,
            "fontWeight": "bold",
          }
        }
      >
        Today
      </Text>
      <Text
        style={
          Object {
            "fontSize": 12,
            "opacity": 0.8,
          }
        }
      >
        23 January 2019
      </Text>
    </View>
  </View>
  <Modal
    animationType="none"
    hardwareAccelerated={false}
    hideModalContentWhileAnimating={false}
    onModalHide={[Function]}
    onModalWillHide={[Function]}
    onModalWillShow={[Function]}
    onRequestClose={[Function]}
    scrollHorizontal={false}
    scrollOffset={0}
    scrollOffsetMax={0}
    scrollTo={null}
    supportedOrientations={
      Array [
        "portrait",
        "landscape",
      ]
    }
    swipeThreshold={100}
    transparent={true}
    visible={false}
  >
    <View
      accessible={true}
      clickable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "backgroundColor": "black",
          "bottom": 0,
          "height": 1334,
          "left": 0,
          "opacity": 0,
          "position": "absolute",
          "right": 0,
          "top": 0,
          "width": 750,
        }
      }
    />
    <View
      hideModalContentWhileAnimating={false}
      onModalHide={[Function]}
      onModalWillHide={[Function]}
      onModalWillShow={[Function]}
      pointerEvents="box-none"
      scrollHorizontal={false}
      scrollOffset={0}
      scrollOffsetMax={0}
      scrollTo={null}
      style={
        Object {
          "flex": 1,
          "justifyContent": "flex-end",
          "margin": 10,
          "transform": Array [
            Object {
              "translateY": 0,
            },
          ],
        }
      }
      supportedOrientations={
        Array [
          "portrait",
          "landscape",
        ]
      }
      swipeThreshold={100}
    >
      <View
        style={
          Array [
            Object {
              "borderRadius": 13,
              "marginBottom": 8,
              "overflow": "hidden",
            },
            Object {
              "backgroundColor": "white",
            },
            undefined,
          ]
        }
      >
        <View
          style={
            Object {
              "backgroundColor": "transparent",
              "borderBottomColor": "#d5d5d5",
              "borderBottomWidth": 0.5,
              "padding": 14,
            }
          }
        >
          <Text
            style={
              Array [
                Object {
                  "color": "#8f8f8f",
                  "fontSize": 13,
                  "textAlign": "center",
                },
                undefined,
              ]
            }
          >
            Pick a date
          </Text>
        </View>
        <View
          onStartShouldSetResponderCapture={[Function]}
        />
        <View
          accessible={true}
          clickable={true}
          isTVSelectable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "backgroundColor": "transparent",
              "borderColor": "#d5d5d5",
              "borderTopWidth": 0.5,
              "height": 57,
              "justifyContent": "center",
            }
          }
        >
          <Text
            style={
              Array [
                Object {
                  "backgroundColor": "transparent",
                  "color": "#007ff9",
                  "fontSize": 20,
                  "fontWeight": "normal",
                  "textAlign": "center",
                },
                undefined,
              ]
            }
          >
            Confirm
          </Text>
        </View>
      </View>
      <View
        accessible={true}
        clickable={true}
        isTVSelectable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Array [
            Object {
              "borderRadius": 13,
              "height": 57,
              "justifyContent": "center",
              "marginBottom": 0,
            },
            Object {
              "backgroundColor": "white",
            },
            undefined,
          ]
        }
      >
        <Text
          style={
            Array [
              Object {
                "backgroundColor": "transparent",
                "color": "#007ff9",
                "fontSize": 20,
                "fontWeight": "600",
                "padding": 10,
                "textAlign": "center",
              },
              undefined,
            ]
          }
        >
          Cancel
        </Text>
      </View>
    </View>
  </Modal>
</View>
`;

exports[`Storyshots Buttons full width, disabled 1`] = `
<View
  accessible={true}
  clickable={true}
  isTVSelectable={true}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Object {
      "alignItems": "center",
      "backgroundColor": "#d9e0ef",
      "borderRadius": 20,
      "height": 40,
      "justifyContent": "center",
      "opacity": 1,
      "paddingHorizontal": 10,
      "width": "100%",
    }
  }
>
  <Text
    style={
      Array [
        Object {
          "color": "#ffffff",
          "fontSize": 16,
          "fontWeight": "bold",
        },
        undefined,
      ]
    }
  >
    Click me!
  </Text>
</View>
`;

exports[`Storyshots Buttons full width, empty 1`] = `
<View
  accessible={true}
  clickable={false}
  isTVSelectable={true}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Object {
      "alignItems": "center",
      "backgroundColor": "#4268b0",
      "borderRadius": 20,
      "height": 40,
      "justifyContent": "center",
      "opacity": 1,
      "paddingHorizontal": 10,
      "width": "100%",
    }
  }
/>
`;

exports[`Storyshots Buttons full width, with text in primary color 1`] = `
<View
  accessible={true}
  clickable={false}
  isTVSelectable={true}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Object {
      "alignItems": "center",
      "backgroundColor": "#4268b0",
      "borderRadius": 20,
      "height": 40,
      "justifyContent": "center",
      "opacity": 1,
      "paddingHorizontal": 10,
      "width": "100%",
    }
  }
>
  <Text
    style={
      Array [
        Object {
          "color": "#ffffff",
          "fontSize": 16,
          "fontWeight": "bold",
        },
        undefined,
      ]
    }
  >
    Click me!
  </Text>
</View>
`;

exports[`Storyshots Buttons round, disabled 1`] = `
<View
  accessible={true}
  clickable={false}
  isTVSelectable={true}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Object {
      "alignItems": "center",
      "backgroundColor": "#d9e0ef",
      "borderRadius": 20,
      "height": 40,
      "justifyContent": "center",
      "opacity": 1,
      "width": 40,
    }
  }
/>
`;

exports[`Storyshots Buttons round, empty 1`] = `
<View
  accessible={true}
  clickable={false}
  isTVSelectable={true}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Object {
      "alignItems": "center",
      "backgroundColor": "#4268b0",
      "borderRadius": 20,
      "height": 40,
      "justifyContent": "center",
      "opacity": 1,
      "width": 40,
    }
  }
/>
`;

exports[`Storyshots Buttons round, with icon in primary color 1`] = `
<View
  accessible={true}
  clickable={false}
  isTVSelectable={true}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Object {
      "alignItems": "center",
      "backgroundColor": "#4268b0",
      "borderRadius": 20,
      "height": 40,
      "justifyContent": "center",
      "opacity": 1,
      "width": 40,
    }
  }
>
  <Text
    style={
      Array [
        Object {
          "color": "#ffffff",
          "fontSize": 16,
          "fontWeight": "bold",
        },
        undefined,
      ]
    }
  >
    <FontAwesomeIcon
      name="rocket"
    />
  </Text>
</View>
`;

exports[`Storyshots CheckBox Default checked & unchecked 1`] = `
<View>
  <View
    accessible={true}
    clickable={true}
    isTVSelectable={true}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#4268b0",
        "borderRadius": 20,
        "height": 40,
        "justifyContent": "center",
        "opacity": 1,
        "width": 40,
      }
    }
  >
    <FontAwesome5Icon
      color="#ffffff"
      name="check"
      size={13.333333333333334}
      solid={true}
    />
  </View>
  <View
    accessible={true}
    clickable={true}
    isTVSelectable={true}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#f5f7fb",
        "borderRadius": 20,
        "height": 40,
        "justifyContent": "center",
        "opacity": 1,
        "width": 40,
      }
    }
  >
    <FontAwesome5Icon
      color="#d9e0ef"
      name="check"
      size={13.333333333333334}
      solid={true}
    />
  </View>
</View>
`;

exports[`Storyshots CheckBox non-default size 1`] = `
<View
  accessible={true}
  clickable={true}
  isTVSelectable={true}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Object {
      "alignItems": "center",
      "backgroundColor": "#4268b0",
      "borderRadius": 50,
      "height": 100,
      "justifyContent": "center",
      "opacity": 1,
      "width": 100,
    }
  }
>
  <FontAwesome5Icon
    color="#ffffff"
    name="check"
    size={33.333333333333336}
    solid={true}
  />
</View>
`;

exports[`Storyshots Clock custom format 1`] = `
<Text
  format="h m s"
>
  5 53 0
</Text>
`;

exports[`Storyshots Clock default 1`] = `
<Text
  format="HH:mm:ss"
>
  17:53:00
</Text>
`;

exports[`Storyshots Countdown m or s 1`] = `
<Text>
  1m
</Text>
`;

exports[`Storyshots Countdown mm:ss 1`] = `
<Text>
  1:40
</Text>
`;

exports[`Storyshots DatePicker Allow null, initially null 1`] = `
<View>
  <View
    accessible={true}
    clickable={true}
    isTVSelectable={true}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "alignSelf": "center",
        "backgroundColor": "#f2f5f7",
        "borderRadius": 50,
        "height": 50,
        "opacity": 1,
        "paddingHorizontal": 50,
        "width": "100%",
      }
    }
  />
  <Modal
    animationType="none"
    hardwareAccelerated={false}
    hideModalContentWhileAnimating={false}
    onModalHide={[Function]}
    onModalWillHide={[Function]}
    onModalWillShow={[Function]}
    onRequestClose={[Function]}
    scrollHorizontal={false}
    scrollOffset={0}
    scrollOffsetMax={0}
    scrollTo={null}
    supportedOrientations={
      Array [
        "portrait",
        "landscape",
      ]
    }
    swipeThreshold={100}
    transparent={true}
    visible={false}
  >
    <View
      accessible={true}
      clickable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "backgroundColor": "black",
          "bottom": 0,
          "height": 1334,
          "left": 0,
          "opacity": 0,
          "position": "absolute",
          "right": 0,
          "top": 0,
          "width": 750,
        }
      }
    />
    <View
      hideModalContentWhileAnimating={false}
      onModalHide={[Function]}
      onModalWillHide={[Function]}
      onModalWillShow={[Function]}
      pointerEvents="box-none"
      scrollHorizontal={false}
      scrollOffset={0}
      scrollOffsetMax={0}
      scrollTo={null}
      style={
        Object {
          "flex": 1,
          "justifyContent": "flex-end",
          "margin": 10,
          "transform": Array [
            Object {
              "translateY": 0,
            },
          ],
        }
      }
      supportedOrientations={
        Array [
          "portrait",
          "landscape",
        ]
      }
      swipeThreshold={100}
    >
      <View
        style={
          Array [
            Object {
              "borderRadius": 13,
              "marginBottom": 8,
              "overflow": "hidden",
            },
            Object {
              "backgroundColor": "white",
            },
            undefined,
          ]
        }
      >
        <View
          style={
            Object {
              "backgroundColor": "transparent",
              "borderBottomColor": "#d5d5d5",
              "borderBottomWidth": 0.5,
              "padding": 14,
            }
          }
        >
          <Text
            style={
              Array [
                Object {
                  "color": "#8f8f8f",
                  "fontSize": 13,
                  "textAlign": "center",
                },
                undefined,
              ]
            }
          >
            Pick a date
          </Text>
        </View>
        <View
          onStartShouldSetResponderCapture={[Function]}
        />
        <View
          accessible={true}
          clickable={true}
          isTVSelectable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "backgroundColor": "transparent",
              "borderColor": "#d5d5d5",
              "borderTopWidth": 0.5,
              "height": 57,
              "justifyContent": "center",
            }
          }
        >
          <Text
            style={
              Array [
                Object {
                  "backgroundColor": "transparent",
                  "color": "#007ff9",
                  "fontSize": 20,
                  "fontWeight": "normal",
                  "textAlign": "center",
                },
                undefined,
              ]
            }
          >
            Confirm
          </Text>
        </View>
      </View>
      <View
        accessible={true}
        clickable={true}
        isTVSelectable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Array [
            Object {
              "borderRadius": 13,
              "height": 57,
              "justifyContent": "center",
              "marginBottom": 0,
            },
            Object {
              "backgroundColor": "white",
            },
            undefined,
          ]
        }
      >
        <Text
          style={
            Array [
              Object {
                "backgroundColor": "transparent",
                "color": "#007ff9",
                "fontSize": 20,
                "fontWeight": "600",
                "padding": 10,
                "textAlign": "center",
              },
              undefined,
            ]
          }
        >
          Cancel
        </Text>
      </View>
    </View>
  </Modal>
</View>
`;

exports[`Storyshots DatePicker Allow null, initially set 1`] = `
<View>
  <View
    accessible={true}
    clickable={true}
    isTVSelectable={true}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "alignSelf": "center",
        "backgroundColor": "#f2f5f7",
        "borderRadius": 50,
        "height": 50,
        "opacity": 1,
        "paddingHorizontal": 50,
        "width": "100%",
      }
    }
  >
    <View
      style={
        Object {
          "alignItems": "center",
          "height": "100%",
          "justifyContent": "center",
          "width": "100%",
        }
      }
    >
      <Text
        style={
          Object {
            "fontSize": 13,
            "fontWeight": "bold",
          }
        }
      >
        Today
      </Text>
      <Text
        style={
          Object {
            "fontSize": 12,
            "opacity": 0.8,
          }
        }
      >
        Wednesday, 23 January 2019
      </Text>
    </View>
    <View
      accessible={true}
      clickable={true}
      isTVSelectable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "backgroundColor": "#ffffff",
          "borderRadius": 20,
          "height": 40,
          "justifyContent": "center",
          "opacity": 1,
          "position": "absolute",
          "right": 5,
          "top": 5,
          "width": 40,
        }
      }
    >
      <Text
        style={
          Object {
            "color": "#4268b0",
          }
        }
      >
        <FontAwesome5Icon
          name="times"
        />
      </Text>
    </View>
  </View>
  <Modal
    animationType="none"
    hardwareAccelerated={false}
    hideModalContentWhileAnimating={false}
    onModalHide={[Function]}
    onModalWillHide={[Function]}
    onModalWillShow={[Function]}
    onRequestClose={[Function]}
    scrollHorizontal={false}
    scrollOffset={0}
    scrollOffsetMax={0}
    scrollTo={null}
    supportedOrientations={
      Array [
        "portrait",
        "landscape",
      ]
    }
    swipeThreshold={100}
    transparent={true}
    visible={false}
  >
    <View
      accessible={true}
      clickable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "backgroundColor": "black",
          "bottom": 0,
          "height": 1334,
          "left": 0,
          "opacity": 0,
          "position": "absolute",
          "right": 0,
          "top": 0,
          "width": 750,
        }
      }
    />
    <View
      hideModalContentWhileAnimating={false}
      onModalHide={[Function]}
      onModalWillHide={[Function]}
      onModalWillShow={[Function]}
      pointerEvents="box-none"
      scrollHorizontal={false}
      scrollOffset={0}
      scrollOffsetMax={0}
      scrollTo={null}
      style={
        Object {
          "flex": 1,
          "justifyContent": "flex-end",
          "margin": 10,
          "transform": Array [
            Object {
              "translateY": 0,
            },
          ],
        }
      }
      supportedOrientations={
        Array [
          "portrait",
          "landscape",
        ]
      }
      swipeThreshold={100}
    >
      <View
        style={
          Array [
            Object {
              "borderRadius": 13,
              "marginBottom": 8,
              "overflow": "hidden",
            },
            Object {
              "backgroundColor": "white",
            },
            undefined,
          ]
        }
      >
        <View
          style={
            Object {
              "backgroundColor": "transparent",
              "borderBottomColor": "#d5d5d5",
              "borderBottomWidth": 0.5,
              "padding": 14,
            }
          }
        >
          <Text
            style={
              Array [
                Object {
                  "color": "#8f8f8f",
                  "fontSize": 13,
                  "textAlign": "center",
                },
                undefined,
              ]
            }
          >
            Pick a date
          </Text>
        </View>
        <View
          onStartShouldSetResponderCapture={[Function]}
        />
        <View
          accessible={true}
          clickable={true}
          isTVSelectable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "backgroundColor": "transparent",
              "borderColor": "#d5d5d5",
              "borderTopWidth": 0.5,
              "height": 57,
              "justifyContent": "center",
            }
          }
        >
          <Text
            style={
              Array [
                Object {
                  "backgroundColor": "transparent",
                  "color": "#007ff9",
                  "fontSize": 20,
                  "fontWeight": "normal",
                  "textAlign": "center",
                },
                undefined,
              ]
            }
          >
            Confirm
          </Text>
        </View>
      </View>
      <View
        accessible={true}
        clickable={true}
        isTVSelectable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Array [
            Object {
              "borderRadius": 13,
              "height": 57,
              "justifyContent": "center",
              "marginBottom": 0,
            },
            Object {
              "backgroundColor": "white",
            },
            undefined,
          ]
        }
      >
        <Text
          style={
            Array [
              Object {
                "backgroundColor": "transparent",
                "color": "#007ff9",
                "fontSize": 20,
                "fontWeight": "600",
                "padding": 10,
                "textAlign": "center",
              },
              undefined,
            ]
          }
        >
          Cancel
        </Text>
      </View>
    </View>
  </Modal>
</View>
`;

exports[`Storyshots DatePicker Allow null, with minimum and maximum date 1`] = `
<View>
  <View
    accessible={true}
    clickable={true}
    isTVSelectable={true}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "alignSelf": "center",
        "backgroundColor": "#f2f5f7",
        "borderRadius": 50,
        "height": 50,
        "opacity": 1,
        "paddingHorizontal": 50,
        "width": "100%",
      }
    }
  >
    <View
      style={
        Object {
          "alignItems": "center",
          "height": "100%",
          "justifyContent": "center",
          "width": "100%",
        }
      }
    >
      <Text
        style={
          Object {
            "fontSize": 13,
            "fontWeight": "bold",
          }
        }
      >
        Today
      </Text>
      <Text
        style={
          Object {
            "fontSize": 12,
            "opacity": 0.8,
          }
        }
      >
        Wednesday, 23 January 2019
      </Text>
    </View>
    <View
      accessible={true}
      clickable={true}
      isTVSelectable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "backgroundColor": "#ffffff",
          "borderRadius": 20,
          "height": 40,
          "justifyContent": "center",
          "opacity": 1,
          "position": "absolute",
          "right": 5,
          "top": 5,
          "width": 40,
        }
      }
    >
      <Text
        style={
          Object {
            "color": "#4268b0",
          }
        }
      >
        <FontAwesome5Icon
          name="times"
        />
      </Text>
    </View>
  </View>
  <Modal
    animationType="none"
    hardwareAccelerated={false}
    hideModalContentWhileAnimating={false}
    onModalHide={[Function]}
    onModalWillHide={[Function]}
    onModalWillShow={[Function]}
    onRequestClose={[Function]}
    scrollHorizontal={false}
    scrollOffset={0}
    scrollOffsetMax={0}
    scrollTo={null}
    supportedOrientations={
      Array [
        "portrait",
        "landscape",
      ]
    }
    swipeThreshold={100}
    transparent={true}
    visible={false}
  >
    <View
      accessible={true}
      clickable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "backgroundColor": "black",
          "bottom": 0,
          "height": 1334,
          "left": 0,
          "opacity": 0,
          "position": "absolute",
          "right": 0,
          "top": 0,
          "width": 750,
        }
      }
    />
    <View
      hideModalContentWhileAnimating={false}
      onModalHide={[Function]}
      onModalWillHide={[Function]}
      onModalWillShow={[Function]}
      pointerEvents="box-none"
      scrollHorizontal={false}
      scrollOffset={0}
      scrollOffsetMax={0}
      scrollTo={null}
      style={
        Object {
          "flex": 1,
          "justifyContent": "flex-end",
          "margin": 10,
          "transform": Array [
            Object {
              "translateY": 0,
            },
          ],
        }
      }
      supportedOrientations={
        Array [
          "portrait",
          "landscape",
        ]
      }
      swipeThreshold={100}
    >
      <View
        style={
          Array [
            Object {
              "borderRadius": 13,
              "marginBottom": 8,
              "overflow": "hidden",
            },
            Object {
              "backgroundColor": "white",
            },
            undefined,
          ]
        }
      >
        <View
          style={
            Object {
              "backgroundColor": "transparent",
              "borderBottomColor": "#d5d5d5",
              "borderBottomWidth": 0.5,
              "padding": 14,
            }
          }
        >
          <Text
            style={
              Array [
                Object {
                  "color": "#8f8f8f",
                  "fontSize": 13,
                  "textAlign": "center",
                },
                undefined,
              ]
            }
          >
            Pick a date
          </Text>
        </View>
        <View
          onStartShouldSetResponderCapture={[Function]}
        />
        <View
          accessible={true}
          clickable={true}
          isTVSelectable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "backgroundColor": "transparent",
              "borderColor": "#d5d5d5",
              "borderTopWidth": 0.5,
              "height": 57,
              "justifyContent": "center",
            }
          }
        >
          <Text
            style={
              Array [
                Object {
                  "backgroundColor": "transparent",
                  "color": "#007ff9",
                  "fontSize": 20,
                  "fontWeight": "normal",
                  "textAlign": "center",
                },
                undefined,
              ]
            }
          >
            Confirm
          </Text>
        </View>
      </View>
      <View
        accessible={true}
        clickable={true}
        isTVSelectable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Array [
            Object {
              "borderRadius": 13,
              "height": 57,
              "justifyContent": "center",
              "marginBottom": 0,
            },
            Object {
              "backgroundColor": "white",
            },
            undefined,
          ]
        }
      >
        <Text
          style={
            Array [
              Object {
                "backgroundColor": "transparent",
                "color": "#007ff9",
                "fontSize": 20,
                "fontWeight": "600",
                "padding": 10,
                "textAlign": "center",
              },
              undefined,
            ]
          }
        >
          Cancel
        </Text>
      </View>
    </View>
  </Modal>
</View>
`;

exports[`Storyshots DatePicker Disallow null, initially set 1`] = `
<View>
  <View
    accessible={true}
    clickable={true}
    isTVSelectable={true}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "alignSelf": "center",
        "backgroundColor": "#f2f5f7",
        "borderRadius": 50,
        "height": 50,
        "opacity": 1,
        "paddingHorizontal": 50,
        "width": "100%",
      }
    }
  >
    <View
      style={
        Object {
          "alignItems": "center",
          "height": "100%",
          "justifyContent": "center",
          "width": "100%",
        }
      }
    >
      <Text
        style={
          Object {
            "fontSize": 13,
            "fontWeight": "bold",
          }
        }
      >
        Today
      </Text>
      <Text
        style={
          Object {
            "fontSize": 12,
            "opacity": 0.8,
          }
        }
      >
        Wednesday, 23 January 2019
      </Text>
    </View>
  </View>
  <Modal
    animationType="none"
    hardwareAccelerated={false}
    hideModalContentWhileAnimating={false}
    onModalHide={[Function]}
    onModalWillHide={[Function]}
    onModalWillShow={[Function]}
    onRequestClose={[Function]}
    scrollHorizontal={false}
    scrollOffset={0}
    scrollOffsetMax={0}
    scrollTo={null}
    supportedOrientations={
      Array [
        "portrait",
        "landscape",
      ]
    }
    swipeThreshold={100}
    transparent={true}
    visible={false}
  >
    <View
      accessible={true}
      clickable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "backgroundColor": "black",
          "bottom": 0,
          "height": 1334,
          "left": 0,
          "opacity": 0,
          "position": "absolute",
          "right": 0,
          "top": 0,
          "width": 750,
        }
      }
    />
    <View
      hideModalContentWhileAnimating={false}
      onModalHide={[Function]}
      onModalWillHide={[Function]}
      onModalWillShow={[Function]}
      pointerEvents="box-none"
      scrollHorizontal={false}
      scrollOffset={0}
      scrollOffsetMax={0}
      scrollTo={null}
      style={
        Object {
          "flex": 1,
          "justifyContent": "flex-end",
          "margin": 10,
          "transform": Array [
            Object {
              "translateY": 0,
            },
          ],
        }
      }
      supportedOrientations={
        Array [
          "portrait",
          "landscape",
        ]
      }
      swipeThreshold={100}
    >
      <View
        style={
          Array [
            Object {
              "borderRadius": 13,
              "marginBottom": 8,
              "overflow": "hidden",
            },
            Object {
              "backgroundColor": "white",
            },
            undefined,
          ]
        }
      >
        <View
          style={
            Object {
              "backgroundColor": "transparent",
              "borderBottomColor": "#d5d5d5",
              "borderBottomWidth": 0.5,
              "padding": 14,
            }
          }
        >
          <Text
            style={
              Array [
                Object {
                  "color": "#8f8f8f",
                  "fontSize": 13,
                  "textAlign": "center",
                },
                undefined,
              ]
            }
          >
            Pick a date
          </Text>
        </View>
        <View
          onStartShouldSetResponderCapture={[Function]}
        />
        <View
          accessible={true}
          clickable={true}
          isTVSelectable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "backgroundColor": "transparent",
              "borderColor": "#d5d5d5",
              "borderTopWidth": 0.5,
              "height": 57,
              "justifyContent": "center",
            }
          }
        >
          <Text
            style={
              Array [
                Object {
                  "backgroundColor": "transparent",
                  "color": "#007ff9",
                  "fontSize": 20,
                  "fontWeight": "normal",
                  "textAlign": "center",
                },
                undefined,
              ]
            }
          >
            Confirm
          </Text>
        </View>
      </View>
      <View
        accessible={true}
        clickable={true}
        isTVSelectable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Array [
            Object {
              "borderRadius": 13,
              "height": 57,
              "justifyContent": "center",
              "marginBottom": 0,
            },
            Object {
              "backgroundColor": "white",
            },
            undefined,
          ]
        }
      >
        <Text
          style={
            Array [
              Object {
                "backgroundColor": "transparent",
                "color": "#007ff9",
                "fontSize": 20,
                "fontWeight": "600",
                "padding": 10,
                "textAlign": "center",
              },
              undefined,
            ]
          }
        >
          Cancel
        </Text>
      </View>
    </View>
  </Modal>
</View>
`;

exports[`Storyshots DatePicker Disallow null, with minimum and maximum date 1`] = `
<View>
  <View
    accessible={true}
    clickable={true}
    isTVSelectable={true}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "alignSelf": "center",
        "backgroundColor": "#f2f5f7",
        "borderRadius": 50,
        "height": 50,
        "opacity": 1,
        "paddingHorizontal": 50,
        "width": "100%",
      }
    }
  >
    <View
      style={
        Object {
          "alignItems": "center",
          "height": "100%",
          "justifyContent": "center",
          "width": "100%",
        }
      }
    >
      <Text
        style={
          Object {
            "fontSize": 13,
            "fontWeight": "bold",
          }
        }
      >
        Today
      </Text>
      <Text
        style={
          Object {
            "fontSize": 12,
            "opacity": 0.8,
          }
        }
      >
        Wednesday, 23 January 2019
      </Text>
    </View>
  </View>
  <Modal
    animationType="none"
    hardwareAccelerated={false}
    hideModalContentWhileAnimating={false}
    onModalHide={[Function]}
    onModalWillHide={[Function]}
    onModalWillShow={[Function]}
    onRequestClose={[Function]}
    scrollHorizontal={false}
    scrollOffset={0}
    scrollOffsetMax={0}
    scrollTo={null}
    supportedOrientations={
      Array [
        "portrait",
        "landscape",
      ]
    }
    swipeThreshold={100}
    transparent={true}
    visible={false}
  >
    <View
      accessible={true}
      clickable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "backgroundColor": "black",
          "bottom": 0,
          "height": 1334,
          "left": 0,
          "opacity": 0,
          "position": "absolute",
          "right": 0,
          "top": 0,
          "width": 750,
        }
      }
    />
    <View
      hideModalContentWhileAnimating={false}
      onModalHide={[Function]}
      onModalWillHide={[Function]}
      onModalWillShow={[Function]}
      pointerEvents="box-none"
      scrollHorizontal={false}
      scrollOffset={0}
      scrollOffsetMax={0}
      scrollTo={null}
      style={
        Object {
          "flex": 1,
          "justifyContent": "flex-end",
          "margin": 10,
          "transform": Array [
            Object {
              "translateY": 0,
            },
          ],
        }
      }
      supportedOrientations={
        Array [
          "portrait",
          "landscape",
        ]
      }
      swipeThreshold={100}
    >
      <View
        style={
          Array [
            Object {
              "borderRadius": 13,
              "marginBottom": 8,
              "overflow": "hidden",
            },
            Object {
              "backgroundColor": "white",
            },
            undefined,
          ]
        }
      >
        <View
          style={
            Object {
              "backgroundColor": "transparent",
              "borderBottomColor": "#d5d5d5",
              "borderBottomWidth": 0.5,
              "padding": 14,
            }
          }
        >
          <Text
            style={
              Array [
                Object {
                  "color": "#8f8f8f",
                  "fontSize": 13,
                  "textAlign": "center",
                },
                undefined,
              ]
            }
          >
            Pick a date
          </Text>
        </View>
        <View
          onStartShouldSetResponderCapture={[Function]}
        />
        <View
          accessible={true}
          clickable={true}
          isTVSelectable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "backgroundColor": "transparent",
              "borderColor": "#d5d5d5",
              "borderTopWidth": 0.5,
              "height": 57,
              "justifyContent": "center",
            }
          }
        >
          <Text
            style={
              Array [
                Object {
                  "backgroundColor": "transparent",
                  "color": "#007ff9",
                  "fontSize": 20,
                  "fontWeight": "normal",
                  "textAlign": "center",
                },
                undefined,
              ]
            }
          >
            Confirm
          </Text>
        </View>
      </View>
      <View
        accessible={true}
        clickable={true}
        isTVSelectable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Array [
            Object {
              "borderRadius": 13,
              "height": 57,
              "justifyContent": "center",
              "marginBottom": 0,
            },
            Object {
              "backgroundColor": "white",
            },
            undefined,
          ]
        }
      >
        <Text
          style={
            Array [
              Object {
                "backgroundColor": "transparent",
                "color": "#007ff9",
                "fontSize": 20,
                "fontWeight": "600",
                "padding": 10,
                "textAlign": "center",
              },
              undefined,
            ]
          }
        >
          Cancel
        </Text>
      </View>
    </View>
  </Modal>
</View>
`;

exports[`Storyshots DateTimePicker Allow null, initially null 1`] = `
<View>
  <View
    accessible={true}
    clickable={true}
    isTVSelectable={true}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "alignSelf": "center",
        "backgroundColor": "#f2f5f7",
        "borderRadius": 50,
        "height": 50,
        "margin": 10,
        "opacity": 1,
        "paddingHorizontal": 50,
        "width": "100%",
      }
    }
  >
    <View
      style={
        Object {
          "alignItems": "center",
          "height": "100%",
          "justifyContent": "center",
          "width": "100%",
        }
      }
    >
      <Text
        style={
          Object {
            "fontSize": 13,
          }
        }
      >
        as-soon-as-possible
      </Text>
      <Text
        style={
          Object {
            "fontSize": 12,
            "opacity": 0.8,
          }
        }
      >
        Wednesday, 23 January 2019, 17:53
      </Text>
    </View>
  </View>
  <Modal
    animationType="none"
    hardwareAccelerated={false}
    hideModalContentWhileAnimating={false}
    onModalHide={[Function]}
    onModalWillHide={[Function]}
    onModalWillShow={[Function]}
    onRequestClose={[Function]}
    scrollHorizontal={false}
    scrollOffset={0}
    scrollOffsetMax={0}
    scrollTo={null}
    supportedOrientations={
      Array [
        "portrait",
        "landscape",
      ]
    }
    swipeThreshold={100}
    transparent={true}
    visible={false}
  >
    <View
      accessible={true}
      clickable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "backgroundColor": "black",
          "bottom": 0,
          "height": 1334,
          "left": 0,
          "opacity": 0,
          "position": "absolute",
          "right": 0,
          "top": 0,
          "width": 750,
        }
      }
    />
    <View
      hideModalContentWhileAnimating={false}
      onModalHide={[Function]}
      onModalWillHide={[Function]}
      onModalWillShow={[Function]}
      pointerEvents="box-none"
      scrollHorizontal={false}
      scrollOffset={0}
      scrollOffsetMax={0}
      scrollTo={null}
      style={
        Object {
          "flex": 1,
          "justifyContent": "flex-end",
          "margin": 10,
          "transform": Array [
            Object {
              "translateY": 0,
            },
          ],
        }
      }
      supportedOrientations={
        Array [
          "portrait",
          "landscape",
        ]
      }
      swipeThreshold={100}
    >
      <View
        style={
          Array [
            Object {
              "borderRadius": 13,
              "marginBottom": 8,
              "overflow": "hidden",
            },
            Object {
              "backgroundColor": "white",
            },
            undefined,
          ]
        }
      >
        <View
          style={
            Object {
              "backgroundColor": "transparent",
              "borderBottomColor": "#d5d5d5",
              "borderBottomWidth": 0.5,
              "padding": 14,
            }
          }
        >
          <Text
            style={
              Array [
                Object {
                  "color": "#8f8f8f",
                  "fontSize": 13,
                  "textAlign": "center",
                },
                undefined,
              ]
            }
          >
            Pick a date
          </Text>
        </View>
        <View
          onStartShouldSetResponderCapture={[Function]}
        />
        <View
          accessible={true}
          clickable={true}
          isTVSelectable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "backgroundColor": "transparent",
              "borderColor": "#d5d5d5",
              "borderTopWidth": 0.5,
              "height": 57,
              "justifyContent": "center",
            }
          }
        >
          <Text
            style={
              Array [
                Object {
                  "backgroundColor": "transparent",
                  "color": "#007ff9",
                  "fontSize": 20,
                  "fontWeight": "normal",
                  "textAlign": "center",
                },
                undefined,
              ]
            }
          >
            Confirm
          </Text>
        </View>
      </View>
      <View
        accessible={true}
        clickable={true}
        isTVSelectable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Array [
            Object {
              "borderRadius": 13,
              "height": 57,
              "justifyContent": "center",
              "marginBottom": 0,
            },
            Object {
              "backgroundColor": "white",
            },
            undefined,
          ]
        }
      >
        <Text
          style={
            Array [
              Object {
                "backgroundColor": "transparent",
                "color": "#007ff9",
                "fontSize": 20,
                "fontWeight": "600",
                "padding": 10,
                "textAlign": "center",
              },
              undefined,
            ]
          }
        >
          Cancel
        </Text>
      </View>
    </View>
  </Modal>
</View>
`;

exports[`Storyshots DateTimePicker Allow null, initially set 1`] = `
<View>
  <View
    accessible={true}
    clickable={true}
    isTVSelectable={true}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "alignSelf": "center",
        "backgroundColor": "#f2f5f7",
        "borderRadius": 50,
        "height": 50,
        "margin": 10,
        "opacity": 1,
        "paddingHorizontal": 50,
        "width": "100%",
      }
    }
  >
    <View
      style={
        Object {
          "alignItems": "center",
          "height": "100%",
          "justifyContent": "center",
          "width": "100%",
        }
      }
    >
      <Text
        style={
          Object {
            "fontSize": 13,
          }
        }
      >
        as-soon-as-possible
      </Text>
      <Text
        style={
          Object {
            "fontSize": 12,
            "opacity": 0.8,
          }
        }
      >
        Wednesday, 23 January 2019, 16:29
      </Text>
    </View>
  </View>
  <Modal
    animationType="none"
    hardwareAccelerated={false}
    hideModalContentWhileAnimating={false}
    onModalHide={[Function]}
    onModalWillHide={[Function]}
    onModalWillShow={[Function]}
    onRequestClose={[Function]}
    scrollHorizontal={false}
    scrollOffset={0}
    scrollOffsetMax={0}
    scrollTo={null}
    supportedOrientations={
      Array [
        "portrait",
        "landscape",
      ]
    }
    swipeThreshold={100}
    transparent={true}
    visible={false}
  >
    <View
      accessible={true}
      clickable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "backgroundColor": "black",
          "bottom": 0,
          "height": 1334,
          "left": 0,
          "opacity": 0,
          "position": "absolute",
          "right": 0,
          "top": 0,
          "width": 750,
        }
      }
    />
    <View
      hideModalContentWhileAnimating={false}
      onModalHide={[Function]}
      onModalWillHide={[Function]}
      onModalWillShow={[Function]}
      pointerEvents="box-none"
      scrollHorizontal={false}
      scrollOffset={0}
      scrollOffsetMax={0}
      scrollTo={null}
      style={
        Object {
          "flex": 1,
          "justifyContent": "flex-end",
          "margin": 10,
          "transform": Array [
            Object {
              "translateY": 0,
            },
          ],
        }
      }
      supportedOrientations={
        Array [
          "portrait",
          "landscape",
        ]
      }
      swipeThreshold={100}
    >
      <View
        style={
          Array [
            Object {
              "borderRadius": 13,
              "marginBottom": 8,
              "overflow": "hidden",
            },
            Object {
              "backgroundColor": "white",
            },
            undefined,
          ]
        }
      >
        <View
          style={
            Object {
              "backgroundColor": "transparent",
              "borderBottomColor": "#d5d5d5",
              "borderBottomWidth": 0.5,
              "padding": 14,
            }
          }
        >
          <Text
            style={
              Array [
                Object {
                  "color": "#8f8f8f",
                  "fontSize": 13,
                  "textAlign": "center",
                },
                undefined,
              ]
            }
          >
            Pick a date
          </Text>
        </View>
        <View
          onStartShouldSetResponderCapture={[Function]}
        />
        <View
          accessible={true}
          clickable={true}
          isTVSelectable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "backgroundColor": "transparent",
              "borderColor": "#d5d5d5",
              "borderTopWidth": 0.5,
              "height": 57,
              "justifyContent": "center",
            }
          }
        >
          <Text
            style={
              Array [
                Object {
                  "backgroundColor": "transparent",
                  "color": "#007ff9",
                  "fontSize": 20,
                  "fontWeight": "normal",
                  "textAlign": "center",
                },
                undefined,
              ]
            }
          >
            Confirm
          </Text>
        </View>
      </View>
      <View
        accessible={true}
        clickable={true}
        isTVSelectable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Array [
            Object {
              "borderRadius": 13,
              "height": 57,
              "justifyContent": "center",
              "marginBottom": 0,
            },
            Object {
              "backgroundColor": "white",
            },
            undefined,
          ]
        }
      >
        <Text
          style={
            Array [
              Object {
                "backgroundColor": "transparent",
                "color": "#007ff9",
                "fontSize": 20,
                "fontWeight": "600",
                "padding": 10,
                "textAlign": "center",
              },
              undefined,
            ]
          }
        >
          Cancel
        </Text>
      </View>
    </View>
  </Modal>
</View>
`;

exports[`Storyshots DateTimePicker Allow null, with minimum and maximum date 1`] = `
<View>
  <View
    accessible={true}
    clickable={true}
    isTVSelectable={true}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "alignSelf": "center",
        "backgroundColor": "#f2f5f7",
        "borderRadius": 50,
        "height": 50,
        "margin": 10,
        "opacity": 1,
        "paddingHorizontal": 50,
        "width": "100%",
      }
    }
  >
    <View
      style={
        Object {
          "alignItems": "center",
          "height": "100%",
          "justifyContent": "center",
          "width": "100%",
        }
      }
    >
      <Text
        style={
          Object {
            "fontSize": 13,
          }
        }
      >
        as-soon-as-possible
      </Text>
      <Text
        style={
          Object {
            "fontSize": 12,
            "opacity": 0.8,
          }
        }
      >
        Wednesday, 23 January 2019, 16:29
      </Text>
    </View>
  </View>
  <Modal
    animationType="none"
    hardwareAccelerated={false}
    hideModalContentWhileAnimating={false}
    onModalHide={[Function]}
    onModalWillHide={[Function]}
    onModalWillShow={[Function]}
    onRequestClose={[Function]}
    scrollHorizontal={false}
    scrollOffset={0}
    scrollOffsetMax={0}
    scrollTo={null}
    supportedOrientations={
      Array [
        "portrait",
        "landscape",
      ]
    }
    swipeThreshold={100}
    transparent={true}
    visible={false}
  >
    <View
      accessible={true}
      clickable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "backgroundColor": "black",
          "bottom": 0,
          "height": 1334,
          "left": 0,
          "opacity": 0,
          "position": "absolute",
          "right": 0,
          "top": 0,
          "width": 750,
        }
      }
    />
    <View
      hideModalContentWhileAnimating={false}
      onModalHide={[Function]}
      onModalWillHide={[Function]}
      onModalWillShow={[Function]}
      pointerEvents="box-none"
      scrollHorizontal={false}
      scrollOffset={0}
      scrollOffsetMax={0}
      scrollTo={null}
      style={
        Object {
          "flex": 1,
          "justifyContent": "flex-end",
          "margin": 10,
          "transform": Array [
            Object {
              "translateY": 0,
            },
          ],
        }
      }
      supportedOrientations={
        Array [
          "portrait",
          "landscape",
        ]
      }
      swipeThreshold={100}
    >
      <View
        style={
          Array [
            Object {
              "borderRadius": 13,
              "marginBottom": 8,
              "overflow": "hidden",
            },
            Object {
              "backgroundColor": "white",
            },
            undefined,
          ]
        }
      >
        <View
          style={
            Object {
              "backgroundColor": "transparent",
              "borderBottomColor": "#d5d5d5",
              "borderBottomWidth": 0.5,
              "padding": 14,
            }
          }
        >
          <Text
            style={
              Array [
                Object {
                  "color": "#8f8f8f",
                  "fontSize": 13,
                  "textAlign": "center",
                },
                undefined,
              ]
            }
          >
            Pick a date
          </Text>
        </View>
        <View
          onStartShouldSetResponderCapture={[Function]}
        />
        <View
          accessible={true}
          clickable={true}
          isTVSelectable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "backgroundColor": "transparent",
              "borderColor": "#d5d5d5",
              "borderTopWidth": 0.5,
              "height": 57,
              "justifyContent": "center",
            }
          }
        >
          <Text
            style={
              Array [
                Object {
                  "backgroundColor": "transparent",
                  "color": "#007ff9",
                  "fontSize": 20,
                  "fontWeight": "normal",
                  "textAlign": "center",
                },
                undefined,
              ]
            }
          >
            Confirm
          </Text>
        </View>
      </View>
      <View
        accessible={true}
        clickable={true}
        isTVSelectable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Array [
            Object {
              "borderRadius": 13,
              "height": 57,
              "justifyContent": "center",
              "marginBottom": 0,
            },
            Object {
              "backgroundColor": "white",
            },
            undefined,
          ]
        }
      >
        <Text
          style={
            Array [
              Object {
                "backgroundColor": "transparent",
                "color": "#007ff9",
                "fontSize": 20,
                "fontWeight": "600",
                "padding": 10,
                "textAlign": "center",
              },
              undefined,
            ]
          }
        >
          Cancel
        </Text>
      </View>
    </View>
  </Modal>
</View>
`;

exports[`Storyshots DateTimePicker Disallow null, initially set 1`] = `
<View>
  <View
    accessible={true}
    clickable={true}
    isTVSelectable={true}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "alignSelf": "center",
        "backgroundColor": "#f2f5f7",
        "borderRadius": 50,
        "height": 50,
        "margin": 10,
        "opacity": 1,
        "paddingHorizontal": 50,
        "width": "100%",
      }
    }
  >
    <View
      style={
        Object {
          "alignItems": "center",
          "height": "100%",
          "justifyContent": "center",
          "width": "100%",
        }
      }
    >
      <Text
        style={
          Object {
            "fontSize": 13,
          }
        }
      >
        as-soon-as-possible
      </Text>
      <Text
        style={
          Object {
            "fontSize": 12,
            "opacity": 0.8,
          }
        }
      >
        Wednesday, 23 January 2019, 16:29
      </Text>
    </View>
  </View>
  <Modal
    animationType="none"
    hardwareAccelerated={false}
    hideModalContentWhileAnimating={false}
    onModalHide={[Function]}
    onModalWillHide={[Function]}
    onModalWillShow={[Function]}
    onRequestClose={[Function]}
    scrollHorizontal={false}
    scrollOffset={0}
    scrollOffsetMax={0}
    scrollTo={null}
    supportedOrientations={
      Array [
        "portrait",
        "landscape",
      ]
    }
    swipeThreshold={100}
    transparent={true}
    visible={false}
  >
    <View
      accessible={true}
      clickable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "backgroundColor": "black",
          "bottom": 0,
          "height": 1334,
          "left": 0,
          "opacity": 0,
          "position": "absolute",
          "right": 0,
          "top": 0,
          "width": 750,
        }
      }
    />
    <View
      hideModalContentWhileAnimating={false}
      onModalHide={[Function]}
      onModalWillHide={[Function]}
      onModalWillShow={[Function]}
      pointerEvents="box-none"
      scrollHorizontal={false}
      scrollOffset={0}
      scrollOffsetMax={0}
      scrollTo={null}
      style={
        Object {
          "flex": 1,
          "justifyContent": "flex-end",
          "margin": 10,
          "transform": Array [
            Object {
              "translateY": 0,
            },
          ],
        }
      }
      supportedOrientations={
        Array [
          "portrait",
          "landscape",
        ]
      }
      swipeThreshold={100}
    >
      <View
        style={
          Array [
            Object {
              "borderRadius": 13,
              "marginBottom": 8,
              "overflow": "hidden",
            },
            Object {
              "backgroundColor": "white",
            },
            undefined,
          ]
        }
      >
        <View
          style={
            Object {
              "backgroundColor": "transparent",
              "borderBottomColor": "#d5d5d5",
              "borderBottomWidth": 0.5,
              "padding": 14,
            }
          }
        >
          <Text
            style={
              Array [
                Object {
                  "color": "#8f8f8f",
                  "fontSize": 13,
                  "textAlign": "center",
                },
                undefined,
              ]
            }
          >
            Pick a date
          </Text>
        </View>
        <View
          onStartShouldSetResponderCapture={[Function]}
        />
        <View
          accessible={true}
          clickable={true}
          isTVSelectable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "backgroundColor": "transparent",
              "borderColor": "#d5d5d5",
              "borderTopWidth": 0.5,
              "height": 57,
              "justifyContent": "center",
            }
          }
        >
          <Text
            style={
              Array [
                Object {
                  "backgroundColor": "transparent",
                  "color": "#007ff9",
                  "fontSize": 20,
                  "fontWeight": "normal",
                  "textAlign": "center",
                },
                undefined,
              ]
            }
          >
            Confirm
          </Text>
        </View>
      </View>
      <View
        accessible={true}
        clickable={true}
        isTVSelectable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Array [
            Object {
              "borderRadius": 13,
              "height": 57,
              "justifyContent": "center",
              "marginBottom": 0,
            },
            Object {
              "backgroundColor": "white",
            },
            undefined,
          ]
        }
      >
        <Text
          style={
            Array [
              Object {
                "backgroundColor": "transparent",
                "color": "#007ff9",
                "fontSize": 20,
                "fontWeight": "600",
                "padding": 10,
                "textAlign": "center",
              },
              undefined,
            ]
          }
        >
          Cancel
        </Text>
      </View>
    </View>
  </Modal>
</View>
`;

exports[`Storyshots DateTimePicker Disallow null, with minimum and maximum date 1`] = `
<View>
  <View
    accessible={true}
    clickable={true}
    isTVSelectable={true}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "alignSelf": "center",
        "backgroundColor": "#f2f5f7",
        "borderRadius": 50,
        "height": 50,
        "margin": 10,
        "opacity": 1,
        "paddingHorizontal": 50,
        "width": "100%",
      }
    }
  >
    <View
      style={
        Object {
          "alignItems": "center",
          "height": "100%",
          "justifyContent": "center",
          "width": "100%",
        }
      }
    >
      <Text
        style={
          Object {
            "fontSize": 13,
          }
        }
      >
        as-soon-as-possible
      </Text>
      <Text
        style={
          Object {
            "fontSize": 12,
            "opacity": 0.8,
          }
        }
      >
        Wednesday, 23 January 2019, 16:29
      </Text>
    </View>
  </View>
  <Modal
    animationType="none"
    hardwareAccelerated={false}
    hideModalContentWhileAnimating={false}
    onModalHide={[Function]}
    onModalWillHide={[Function]}
    onModalWillShow={[Function]}
    onRequestClose={[Function]}
    scrollHorizontal={false}
    scrollOffset={0}
    scrollOffsetMax={0}
    scrollTo={null}
    supportedOrientations={
      Array [
        "portrait",
        "landscape",
      ]
    }
    swipeThreshold={100}
    transparent={true}
    visible={false}
  >
    <View
      accessible={true}
      clickable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "backgroundColor": "black",
          "bottom": 0,
          "height": 1334,
          "left": 0,
          "opacity": 0,
          "position": "absolute",
          "right": 0,
          "top": 0,
          "width": 750,
        }
      }
    />
    <View
      hideModalContentWhileAnimating={false}
      onModalHide={[Function]}
      onModalWillHide={[Function]}
      onModalWillShow={[Function]}
      pointerEvents="box-none"
      scrollHorizontal={false}
      scrollOffset={0}
      scrollOffsetMax={0}
      scrollTo={null}
      style={
        Object {
          "flex": 1,
          "justifyContent": "flex-end",
          "margin": 10,
          "transform": Array [
            Object {
              "translateY": 0,
            },
          ],
        }
      }
      supportedOrientations={
        Array [
          "portrait",
          "landscape",
        ]
      }
      swipeThreshold={100}
    >
      <View
        style={
          Array [
            Object {
              "borderRadius": 13,
              "marginBottom": 8,
              "overflow": "hidden",
            },
            Object {
              "backgroundColor": "white",
            },
            undefined,
          ]
        }
      >
        <View
          style={
            Object {
              "backgroundColor": "transparent",
              "borderBottomColor": "#d5d5d5",
              "borderBottomWidth": 0.5,
              "padding": 14,
            }
          }
        >
          <Text
            style={
              Array [
                Object {
                  "color": "#8f8f8f",
                  "fontSize": 13,
                  "textAlign": "center",
                },
                undefined,
              ]
            }
          >
            Pick a date
          </Text>
        </View>
        <View
          onStartShouldSetResponderCapture={[Function]}
        />
        <View
          accessible={true}
          clickable={true}
          isTVSelectable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "backgroundColor": "transparent",
              "borderColor": "#d5d5d5",
              "borderTopWidth": 0.5,
              "height": 57,
              "justifyContent": "center",
            }
          }
        >
          <Text
            style={
              Array [
                Object {
                  "backgroundColor": "transparent",
                  "color": "#007ff9",
                  "fontSize": 20,
                  "fontWeight": "normal",
                  "textAlign": "center",
                },
                undefined,
              ]
            }
          >
            Confirm
          </Text>
        </View>
      </View>
      <View
        accessible={true}
        clickable={true}
        isTVSelectable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Array [
            Object {
              "borderRadius": 13,
              "height": 57,
              "justifyContent": "center",
              "marginBottom": 0,
            },
            Object {
              "backgroundColor": "white",
            },
            undefined,
          ]
        }
      >
        <Text
          style={
            Array [
              Object {
                "backgroundColor": "transparent",
                "color": "#007ff9",
                "fontSize": 20,
                "fontWeight": "600",
                "padding": 10,
                "textAlign": "center",
              },
              undefined,
            ]
          }
        >
          Cancel
        </Text>
      </View>
    </View>
  </Modal>
</View>
`;

exports[`Storyshots DateTimePicker With interval of 10 minutes 1`] = `
<View>
  <View
    accessible={true}
    clickable={true}
    isTVSelectable={true}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "alignSelf": "center",
        "backgroundColor": "#f2f5f7",
        "borderRadius": 50,
        "height": 50,
        "margin": 10,
        "opacity": 1,
        "paddingHorizontal": 50,
        "width": "100%",
      }
    }
  >
    <View
      style={
        Object {
          "alignItems": "center",
          "height": "100%",
          "justifyContent": "center",
          "width": "100%",
        }
      }
    >
      <Text
        style={
          Object {
            "fontSize": 13,
          }
        }
      >
        as-soon-as-possible
      </Text>
      <Text
        style={
          Object {
            "fontSize": 12,
            "opacity": 0.8,
          }
        }
      >
        Wednesday, 23 January 2019, 17:53
      </Text>
    </View>
  </View>
  <Modal
    animationType="none"
    hardwareAccelerated={false}
    hideModalContentWhileAnimating={false}
    onModalHide={[Function]}
    onModalWillHide={[Function]}
    onModalWillShow={[Function]}
    onRequestClose={[Function]}
    scrollHorizontal={false}
    scrollOffset={0}
    scrollOffsetMax={0}
    scrollTo={null}
    supportedOrientations={
      Array [
        "portrait",
        "landscape",
      ]
    }
    swipeThreshold={100}
    transparent={true}
    visible={false}
  >
    <View
      accessible={true}
      clickable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "backgroundColor": "black",
          "bottom": 0,
          "height": 1334,
          "left": 0,
          "opacity": 0,
          "position": "absolute",
          "right": 0,
          "top": 0,
          "width": 750,
        }
      }
    />
    <View
      hideModalContentWhileAnimating={false}
      onModalHide={[Function]}
      onModalWillHide={[Function]}
      onModalWillShow={[Function]}
      pointerEvents="box-none"
      scrollHorizontal={false}
      scrollOffset={0}
      scrollOffsetMax={0}
      scrollTo={null}
      style={
        Object {
          "flex": 1,
          "justifyContent": "flex-end",
          "margin": 10,
          "transform": Array [
            Object {
              "translateY": 0,
            },
          ],
        }
      }
      supportedOrientations={
        Array [
          "portrait",
          "landscape",
        ]
      }
      swipeThreshold={100}
    >
      <View
        style={
          Array [
            Object {
              "borderRadius": 13,
              "marginBottom": 8,
              "overflow": "hidden",
            },
            Object {
              "backgroundColor": "white",
            },
            undefined,
          ]
        }
      >
        <View
          style={
            Object {
              "backgroundColor": "transparent",
              "borderBottomColor": "#d5d5d5",
              "borderBottomWidth": 0.5,
              "padding": 14,
            }
          }
        >
          <Text
            style={
              Array [
                Object {
                  "color": "#8f8f8f",
                  "fontSize": 13,
                  "textAlign": "center",
                },
                undefined,
              ]
            }
          >
            Pick a date
          </Text>
        </View>
        <View
          onStartShouldSetResponderCapture={[Function]}
        />
        <View
          accessible={true}
          clickable={true}
          isTVSelectable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "backgroundColor": "transparent",
              "borderColor": "#d5d5d5",
              "borderTopWidth": 0.5,
              "height": 57,
              "justifyContent": "center",
            }
          }
        >
          <Text
            style={
              Array [
                Object {
                  "backgroundColor": "transparent",
                  "color": "#007ff9",
                  "fontSize": 20,
                  "fontWeight": "normal",
                  "textAlign": "center",
                },
                undefined,
              ]
            }
          >
            Confirm
          </Text>
        </View>
      </View>
      <View
        accessible={true}
        clickable={true}
        isTVSelectable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Array [
            Object {
              "borderRadius": 13,
              "height": 57,
              "justifyContent": "center",
              "marginBottom": 0,
            },
            Object {
              "backgroundColor": "white",
            },
            undefined,
          ]
        }
      >
        <Text
          style={
            Array [
              Object {
                "backgroundColor": "transparent",
                "color": "#007ff9",
                "fontSize": 20,
                "fontWeight": "600",
                "padding": 10,
                "textAlign": "center",
              },
              undefined,
            ]
          }
        >
          Cancel
        </Text>
      </View>
    </View>
  </Modal>
</View>
`;

exports[`Storyshots DefaultLoadingComponent With a message 1`] = `
<View
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "flex": 1,
        "justifyContent": "center",
      }
    }
  >
    <ActivityIndicator
      animating={true}
      color="#4268b0"
      hidesWhenStopped={true}
      size="large"
    />
    <View
      style={
        Object {
          "marginTop": 15,
        }
      }
    >
      <Text
        style={
          Object {
            "textAlign": "center",
          }
        }
      >
        Things are loading
      </Text>
    </View>
  </View>
</View>
`;

exports[`Storyshots Drawer Closed drawer 1`] = `
<View
  onMoveShouldSetResponder={[Function]}
  onMoveShouldSetResponderCapture={[Function]}
  onResponderEnd={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderReject={[Function]}
  onResponderRelease={[Function]}
  onResponderStart={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  onStartShouldSetResponderCapture={[Function]}
  style={
    Object {
      "bottom": 0,
      "left": 0,
      "position": "absolute",
      "right": 0,
    }
  }
>
  <View
    style={
      Object {
        "paddingTop": 25,
        "position": "absolute",
        "top": -49,
        "transform": Array [
          Object {
            "translateY": 0,
          },
        ],
        "width": "100%",
      }
    }
  >
    <View
      style={
        Object {
          "backgroundColor": "white",
          "borderTopLeftRadius": 10,
          "borderTopRightRadius": 10,
          "height": 1000,
          "width": "100%",
        }
      }
    >
      <View
        onLayout={[Function]}
      >
        <View
          accessible={true}
          clickable={true}
          isTVSelectable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "opacity": 1,
            }
          }
        >
          <View
            style={
              Object {
                "width": "100%",
              }
            }
          >
            <View
              style={
                Object {
                  "alignSelf": "center",
                  "backgroundColor": "#cdd7e2",
                  "borderRadius": 4,
                  "height": 4,
                  "margin": 10,
                  "width": 40,
                }
              }
            />
          </View>
        </View>
        <Text>
          The drawer content!
        </Text>
      </View>
    </View>
  </View>
</View>
`;

exports[`Storyshots ErrorBox Multi-line 1`] = `
<View
  style={
    Object {
      "alignItems": "flex-start",
      "alignSelf": "flex-start",
      "backgroundColor": "#FF5858",
      "borderRadius": 20,
      "flexDirection": "row",
      "maxWidth": "100%",
      "padding": 8,
    }
  }
>
  <FontAwesome5Icon
    color="#ffffff"
    name="exclamation-circle"
    size={24}
  />
  <Text
    style={
      Object {
        "color": "#ffffff",
        "flex": -1,
        "fontSize": 16,
        "fontWeight": "bold",
        "marginHorizontal": 10,
        "textAlignVertical": "center",
      }
    }
  >
    This is an error that takes some explaining. It will be spread over multiple lines in the error box. The error box should still look okay this way.
  </Text>
</View>
`;

exports[`Storyshots ErrorBox Single line 1`] = `
<View
  style={
    Object {
      "alignItems": "flex-start",
      "alignSelf": "flex-start",
      "backgroundColor": "#FF5858",
      "borderRadius": 20,
      "flexDirection": "row",
      "maxWidth": "100%",
      "padding": 8,
    }
  }
>
  <FontAwesome5Icon
    color="#ffffff"
    name="exclamation-circle"
    size={24}
  />
  <Text
    style={
      Object {
        "color": "#ffffff",
        "flex": -1,
        "fontSize": 16,
        "fontWeight": "bold",
        "marginHorizontal": 10,
        "textAlignVertical": "center",
      }
    }
  >
    This is an error
  </Text>
</View>
`;

exports[`Storyshots OfflineNotice default 1`] = `null`;

exports[`Storyshots PhoneNumberInput Playground 1`] = `
<View
  style={
    Object {
      "padding": 20,
    }
  }
>
  <TextInput
    countryCode="BE"
    keyboardType="phone-pad"
    onChangeText={[Function]}
    onPhoneNumberChanged={[Function]}
    placeholder="Enter phone number"
    returnKeyType="done"
    style={
      Object {
        "borderRadius": 3,
        "borderWidth": 2,
        "fontSize": 19,
        "marginVertical": 20,
      }
    }
    textContentType="telephoneNumber"
  />
  <Text
    style={
      Object {
        "fontSize": 18,
        "marginBottom": 5,
      }
    }
  >
    Is valid: 
    NO
  </Text>
  <Text
    style={
      Object {
        "fontSize": 18,
        "marginBottom": 5,
      }
    }
  >
    E.164 formatted: 
  </Text>
  <Text
    style={
      Object {
        "fontSize": 18,
        "marginBottom": 5,
      }
    }
  >
    National number: 
  </Text>
  <Text
    style={
      Object {
        "fontSize": 18,
        "marginBottom": 5,
      }
    }
  >
    Country: 
  </Text>
  <Text
    style={
      Object {
        "fontSize": 18,
        "marginBottom": 5,
      }
    }
  >
    Country code: 
  </Text>
</View>
`;

exports[`Storyshots ProgressCircle Animated 1`] = `
<View>
  <View
    style={
      Object {
        "backgroundColor": "red",
        "borderRadius": 110,
        "height": 220,
        "width": 220,
      }
    }
  />
  <View
    style={
      Object {
        "backgroundColor": "blue",
        "borderBottomRightRadius": 0,
        "borderRadius": 110,
        "borderTopRightRadius": 0,
        "height": 220,
        "overflow": "hidden",
        "position": "absolute",
        "transform": Array [
          Object {
            "translateX": 55,
          },
          Object {
            "rotate": "0deg",
          },
          Object {
            "translateX": -55,
          },
        ],
        "width": 110,
      }
    }
  />
  <View
    style={
      Object {
        "backgroundColor": "red",
        "borderBottomRightRadius": 0,
        "borderRadius": 110,
        "borderTopRightRadius": 0,
        "height": 220,
        "overflow": "hidden",
        "position": "absolute",
        "transform": Array [
          Object {
            "scaleY": 1,
          },
        ],
        "width": 110,
      }
    }
  />
  <View
    style={
      Object {
        "backgroundColor": "blue",
        "borderBottomLeftRadius": 0,
        "borderRadius": 110,
        "borderTopLeftRadius": 0,
        "height": 220,
        "left": 110,
        "overflow": "hidden",
        "position": "absolute",
        "transform": Array [
          Object {
            "scaleY": 0.00001,
          },
        ],
        "width": 110,
      }
    }
  />
  <View
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "white",
        "borderRadius": 100,
        "height": 200,
        "justifyContent": "center",
        "left": 10,
        "position": "absolute",
        "top": 10,
        "width": 200,
      }
    }
  />
</View>
`;

exports[`Storyshots ProgressCircle At 0% 1`] = `
<View>
  <View
    style={
      Object {
        "backgroundColor": "red",
        "borderRadius": 110,
        "height": 220,
        "width": 220,
      }
    }
  />
  <View
    style={
      Object {
        "backgroundColor": "blue",
        "borderBottomRightRadius": 0,
        "borderRadius": 110,
        "borderTopRightRadius": 0,
        "height": 220,
        "overflow": "hidden",
        "position": "absolute",
        "transform": Array [
          Object {
            "translateX": 55,
          },
          Object {
            "rotate": "0deg",
          },
          Object {
            "translateX": -55,
          },
        ],
        "width": 110,
      }
    }
  />
  <View
    style={
      Object {
        "backgroundColor": "red",
        "borderBottomRightRadius": 0,
        "borderRadius": 110,
        "borderTopRightRadius": 0,
        "height": 220,
        "overflow": "hidden",
        "position": "absolute",
        "transform": Array [
          Object {
            "scaleY": 1,
          },
        ],
        "width": 110,
      }
    }
  />
  <View
    style={
      Object {
        "backgroundColor": "blue",
        "borderBottomLeftRadius": 0,
        "borderRadius": 110,
        "borderTopLeftRadius": 0,
        "height": 220,
        "left": 110,
        "overflow": "hidden",
        "position": "absolute",
        "transform": Array [
          Object {
            "scaleY": 0.00001,
          },
        ],
        "width": 110,
      }
    }
  />
  <View
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "white",
        "borderRadius": 100,
        "height": 200,
        "justifyContent": "center",
        "left": 10,
        "position": "absolute",
        "top": 10,
        "width": 200,
      }
    }
  />
</View>
`;

exports[`Storyshots ProgressCircle At 33% 1`] = `
<View>
  <View
    style={
      Object {
        "backgroundColor": "red",
        "borderRadius": 110,
        "height": 220,
        "width": 220,
      }
    }
  />
  <View
    style={
      Object {
        "backgroundColor": "blue",
        "borderBottomRightRadius": 0,
        "borderRadius": 110,
        "borderTopRightRadius": 0,
        "height": 220,
        "overflow": "hidden",
        "position": "absolute",
        "transform": Array [
          Object {
            "translateX": 55,
          },
          Object {
            "rotate": "118.8deg",
          },
          Object {
            "translateX": -55,
          },
        ],
        "width": 110,
      }
    }
  />
  <View
    style={
      Object {
        "backgroundColor": "red",
        "borderBottomRightRadius": 0,
        "borderRadius": 110,
        "borderTopRightRadius": 0,
        "height": 220,
        "overflow": "hidden",
        "position": "absolute",
        "transform": Array [
          Object {
            "scaleY": 1,
          },
        ],
        "width": 110,
      }
    }
  />
  <View
    style={
      Object {
        "backgroundColor": "blue",
        "borderBottomLeftRadius": 0,
        "borderRadius": 110,
        "borderTopLeftRadius": 0,
        "height": 220,
        "left": 110,
        "overflow": "hidden",
        "position": "absolute",
        "transform": Array [
          Object {
            "scaleY": 0.00001,
          },
        ],
        "width": 110,
      }
    }
  />
  <View
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "white",
        "borderRadius": 100,
        "height": 200,
        "justifyContent": "center",
        "left": 10,
        "position": "absolute",
        "top": 10,
        "width": 200,
      }
    }
  />
</View>
`;

exports[`Storyshots ProgressCircle At 50% 1`] = `
<View>
  <View
    style={
      Object {
        "backgroundColor": "red",
        "borderRadius": 110,
        "height": 220,
        "width": 220,
      }
    }
  />
  <View
    style={
      Object {
        "backgroundColor": "blue",
        "borderBottomRightRadius": 0,
        "borderRadius": 110,
        "borderTopRightRadius": 0,
        "height": 220,
        "overflow": "hidden",
        "position": "absolute",
        "transform": Array [
          Object {
            "translateX": 55,
          },
          Object {
            "rotate": "180deg",
          },
          Object {
            "translateX": -55,
          },
        ],
        "width": 110,
      }
    }
  />
  <View
    style={
      Object {
        "backgroundColor": "red",
        "borderBottomRightRadius": 0,
        "borderRadius": 110,
        "borderTopRightRadius": 0,
        "height": 220,
        "overflow": "hidden",
        "position": "absolute",
        "transform": Array [
          Object {
            "scaleY": 1,
          },
        ],
        "width": 110,
      }
    }
  />
  <View
    style={
      Object {
        "backgroundColor": "blue",
        "borderBottomLeftRadius": 0,
        "borderRadius": 110,
        "borderTopLeftRadius": 0,
        "height": 220,
        "left": 110,
        "overflow": "hidden",
        "position": "absolute",
        "transform": Array [
          Object {
            "scaleY": 0.00001,
          },
        ],
        "width": 110,
      }
    }
  />
  <View
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "white",
        "borderRadius": 100,
        "height": 200,
        "justifyContent": "center",
        "left": 10,
        "position": "absolute",
        "top": 10,
        "width": 200,
      }
    }
  />
</View>
`;

exports[`Storyshots ProgressCircle At 75% 1`] = `
<View>
  <View
    style={
      Object {
        "backgroundColor": "red",
        "borderRadius": 110,
        "height": 220,
        "width": 220,
      }
    }
  />
  <View
    style={
      Object {
        "backgroundColor": "blue",
        "borderBottomRightRadius": 0,
        "borderRadius": 110,
        "borderTopRightRadius": 0,
        "height": 220,
        "overflow": "hidden",
        "position": "absolute",
        "transform": Array [
          Object {
            "translateX": 55,
          },
          Object {
            "rotate": "270deg",
          },
          Object {
            "translateX": -55,
          },
        ],
        "width": 110,
      }
    }
  />
  <View
    style={
      Object {
        "backgroundColor": "red",
        "borderBottomRightRadius": 0,
        "borderRadius": 110,
        "borderTopRightRadius": 0,
        "height": 220,
        "overflow": "hidden",
        "position": "absolute",
        "transform": Array [
          Object {
            "scaleY": 0.00001,
          },
        ],
        "width": 110,
      }
    }
  />
  <View
    style={
      Object {
        "backgroundColor": "blue",
        "borderBottomLeftRadius": 0,
        "borderRadius": 110,
        "borderTopLeftRadius": 0,
        "height": 220,
        "left": 110,
        "overflow": "hidden",
        "position": "absolute",
        "transform": Array [
          Object {
            "scaleY": 1,
          },
        ],
        "width": 110,
      }
    }
  />
  <View
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "white",
        "borderRadius": 100,
        "height": 200,
        "justifyContent": "center",
        "left": 10,
        "position": "absolute",
        "top": 10,
        "width": 200,
      }
    }
  />
</View>
`;

exports[`Storyshots ProgressCircle At 100% 1`] = `
<View>
  <View
    style={
      Object {
        "backgroundColor": "red",
        "borderRadius": 110,
        "height": 220,
        "width": 220,
      }
    }
  />
  <View
    style={
      Object {
        "backgroundColor": "blue",
        "borderBottomRightRadius": 0,
        "borderRadius": 110,
        "borderTopRightRadius": 0,
        "height": 220,
        "overflow": "hidden",
        "position": "absolute",
        "transform": Array [
          Object {
            "translateX": 55,
          },
          Object {
            "rotate": "360deg",
          },
          Object {
            "translateX": -55,
          },
        ],
        "width": 110,
      }
    }
  />
  <View
    style={
      Object {
        "backgroundColor": "red",
        "borderBottomRightRadius": 0,
        "borderRadius": 110,
        "borderTopRightRadius": 0,
        "height": 220,
        "overflow": "hidden",
        "position": "absolute",
        "transform": Array [
          Object {
            "scaleY": 0.00001,
          },
        ],
        "width": 110,
      }
    }
  />
  <View
    style={
      Object {
        "backgroundColor": "blue",
        "borderBottomLeftRadius": 0,
        "borderRadius": 110,
        "borderTopLeftRadius": 0,
        "height": 220,
        "left": 110,
        "overflow": "hidden",
        "position": "absolute",
        "transform": Array [
          Object {
            "scaleY": 1,
          },
        ],
        "width": 110,
      }
    }
  />
  <View
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "white",
        "borderRadius": 100,
        "height": 200,
        "justifyContent": "center",
        "left": 10,
        "position": "absolute",
        "top": 10,
        "width": 200,
      }
    }
  />
</View>
`;

exports[`Storyshots ProgressCircle With transparent inner circle 1`] = `
<View>
  <View
    style={
      Object {
        "backgroundColor": "red",
        "borderRadius": 110,
        "height": 220,
        "width": 220,
      }
    }
  />
  <View
    style={
      Object {
        "backgroundColor": "blue",
        "borderBottomRightRadius": 0,
        "borderRadius": 110,
        "borderTopRightRadius": 0,
        "height": 220,
        "overflow": "hidden",
        "position": "absolute",
        "transform": Array [
          Object {
            "translateX": 55,
          },
          Object {
            "rotate": "0deg",
          },
          Object {
            "translateX": -55,
          },
        ],
        "width": 110,
      }
    }
  />
  <View
    style={
      Object {
        "backgroundColor": "red",
        "borderBottomRightRadius": 0,
        "borderRadius": 110,
        "borderTopRightRadius": 0,
        "height": 220,
        "overflow": "hidden",
        "position": "absolute",
        "transform": Array [
          Object {
            "scaleY": 1,
          },
        ],
        "width": 110,
      }
    }
  />
  <View
    style={
      Object {
        "backgroundColor": "blue",
        "borderBottomLeftRadius": 0,
        "borderRadius": 110,
        "borderTopLeftRadius": 0,
        "height": 220,
        "left": 110,
        "overflow": "hidden",
        "position": "absolute",
        "transform": Array [
          Object {
            "scaleY": 0.00001,
          },
        ],
        "width": 110,
      }
    }
  />
  <View
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "transparent",
        "borderRadius": 100,
        "height": 200,
        "justifyContent": "center",
        "left": 10,
        "position": "absolute",
        "top": 10,
        "width": 200,
      }
    }
  />
</View>
`;

exports[`Storyshots QuantityPicker With min = 1 and max = 5 1`] = `
<View
  style={
    Array [
      Object {
        "alignItems": "center",
        "backgroundColor": "#eceff7",
        "borderRadius": 60,
        "flexDirection": "row",
        "height": 46,
        "justifyContent": "space-between",
        "paddingHorizontal": 3,
      },
      Object {
        "margin": 20,
      },
    ]
  }
>
  <View
    accessible={true}
    clickable={true}
    isTVSelectable={true}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#d9e0ef",
        "borderRadius": 60,
        "height": 40,
        "justifyContent": "center",
        "opacity": 1,
        "width": 40,
      }
    }
  >
    <FontAwesome5Icon
      color="white"
      name="minus"
      size={18}
      solid={true}
    />
  </View>
  <Text
    style={
      Object {
        "color": "#4268b0",
        "fontSize": 16,
        "fontWeight": "500",
      }
    }
  >
    1 ticket(s)
  </Text>
  <View
    accessible={true}
    clickable={true}
    isTVSelectable={true}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#4268b0",
        "borderRadius": 60,
        "color": "#ffffff",
        "height": 40,
        "justifyContent": "center",
        "opacity": 1,
        "width": 40,
      }
    }
  >
    <FontAwesome5Icon
      color="white"
      name="plus"
      size={18}
      solid={true}
    />
  </View>
</View>
`;

exports[`Storyshots ShadowScrollView With some test views 1`] = `
<View
  style={
    Object {
      "flex": 1,
    }
  }
>
  <Image
    resizeMode="stretch"
    source={
      Object {
        "testUri": "../../../app/ui/img/shadow.png",
      }
    }
    style={
      Array [
        Object {
          "height": 20,
          "position": "absolute",
          "width": "100%",
        },
        Object {
          "transform": Array [
            Object {
              "rotate": "180deg",
            },
          ],
        },
        Object {
          "top": 0,
        },
      ]
    }
  />
  <RCTScrollView>
    <View>
      <View
        style={
          Object {
            "backgroundColor": "#eceff7",
            "height": 200,
            "width": "100%",
          }
        }
      />
      <View
        style={
          Object {
            "backgroundColor": "white",
            "height": 200,
            "width": "100%",
          }
        }
      />
      <View
        style={
          Object {
            "backgroundColor": "#eceff7",
            "height": 200,
            "width": "100%",
          }
        }
      />
      <View
        style={
          Object {
            "backgroundColor": "white",
            "height": 200,
            "width": "100%",
          }
        }
      />
      <View
        style={
          Object {
            "backgroundColor": "#eceff7",
            "height": 200,
            "width": "100%",
          }
        }
      />
      <View
        style={
          Object {
            "backgroundColor": "white",
            "height": 200,
            "width": "100%",
          }
        }
      />
    </View>
  </RCTScrollView>
  <Image
    resizeMode="stretch"
    source={
      Object {
        "testUri": "../../../app/ui/img/shadow.png",
      }
    }
    style={
      Array [
        Object {
          "height": 20,
          "position": "absolute",
          "width": "100%",
        },
        Object {
          "bottom": 0,
        },
      ]
    }
  />
</View>
`;

exports[`Storyshots Switch With test props 1`] = `
<View
  style={
    Array [
      Object {
        "alignItems": "center",
        "backgroundColor": "#f2f5f7",
        "borderRadius": 60,
        "flexDirection": "row",
        "height": 46,
        "justifyContent": "center",
        "paddingHorizontal": 3,
      },
      undefined,
    ]
  }
>
  <View
    accessible={true}
    clickable={true}
    isTVSelectable={true}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#4268b0",
        "borderRadius": 60,
        "flexGrow": 1,
        "height": 40,
        "justifyContent": "center",
        "opacity": 1,
      }
    }
  >
    <Text
      style={
        Array [
          Object {
            "fontSize": 16,
          },
          Object {
            "color": "white",
          },
        ]
      }
    >
      First Option
    </Text>
  </View>
  <View
    accessible={true}
    clickable={true}
    isTVSelectable={true}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "alignItems": "center",
        "borderRadius": 60,
        "flexGrow": 1,
        "height": 40,
        "justifyContent": "center",
        "opacity": 1,
      }
    }
  >
    <Text
      style={
        Array [
          Object {
            "fontSize": 16,
          },
          Object {
            "color": "#9bafc5",
          },
        ]
      }
    >
      Second Option
    </Text>
  </View>
</View>
`;

exports[`Storyshots TextInput empty 1`] = `
<View>
  <View
    style={
      Array [
        Object {
          "alignItems": "center",
          "backgroundColor": "#f2f5f7",
          "borderRadius": 100,
          "borderWidth": 0,
          "flexDirection": "row",
          "height": 40,
          "justifyContent": "center",
          "paddingHorizontal": 15,
        },
        null,
        null,
        null,
        null,
        null,
      ]
    }
    testID="inputView"
  >
    <TextInput
      onBlur={[Function]}
      onChangeText={[Function]}
      onFocus={[Function]}
      placeholderTextColor="lightgrey"
      style={
        Array [
          Object {
            "flex": 1,
          },
          undefined,
        ]
      }
      testID="input"
      underlineColorAndroid="transparent"
    />
    <View
      accessible={true}
      clickable={true}
      hitSlop={
        Object {
          "bottom": 14,
          "left": 14,
          "right": 14,
          "top": 14,
        }
      }
      isTVSelectable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "height": 20,
          "opacity": 1,
          "width": 20,
        }
      }
      testID="clearButton"
    >
      <FontAwesome5Icon
        name="times-circle"
        size={20}
        solid={true}
        style={
          Object {
            "color": "lightgrey",
          }
        }
      />
    </View>
  </View>
</View>
`;

exports[`Storyshots TextInput with placeholder text 1`] = `
<View>
  <View
    style={
      Array [
        Object {
          "alignItems": "center",
          "backgroundColor": "#f2f5f7",
          "borderRadius": 100,
          "borderWidth": 0,
          "flexDirection": "row",
          "height": 40,
          "justifyContent": "center",
          "paddingHorizontal": 15,
        },
        null,
        null,
        null,
        null,
        null,
      ]
    }
    testID="inputView"
  >
    <TextInput
      onBlur={[Function]}
      onChangeText={[Function]}
      onFocus={[Function]}
      placeholder="Some placeholder text"
      placeholderTextColor="lightgrey"
      style={
        Array [
          Object {
            "flex": 1,
          },
          undefined,
        ]
      }
      testID="input"
      underlineColorAndroid="transparent"
    />
    <View
      accessible={true}
      clickable={true}
      hitSlop={
        Object {
          "bottom": 14,
          "left": 14,
          "right": 14,
          "top": 14,
        }
      }
      isTVSelectable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "height": 20,
          "opacity": 1,
          "width": 20,
        }
      }
      testID="clearButton"
    >
      <FontAwesome5Icon
        name="times-circle"
        size={20}
        solid={true}
        style={
          Object {
            "color": "lightgrey",
          }
        }
      />
    </View>
  </View>
</View>
`;
